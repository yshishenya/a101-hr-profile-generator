services:
  # Основное приложение A101 HR
  app:
    build: .
    container_name: a101hr_app
    # Используем host network для решения проблемы медленной передачи данных через Docker bridge
    network_mode: "host"
    env_file:
      - .env
    environment:
      - ENVIRONMENT=development
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      # Docker specific overrides
      - BASE_DATA_PATH=/app
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-docker-dev-secret-key-a101hr-system}
    volumes:
      # Монтируем код для разработки с hot-reload
      - ./backend:/app/backend
      - ./templates:/app/templates
      - ./docs:/app/docs
      # Персистентные данные с доступом с хоста (bind mounts)
      - ./data:/app/data
      - ./generated_profiles:/app/generated_profiles
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8022/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # NiceGUI Frontend (Legacy - will be replaced by Vue.js)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: a101hr_frontend
    ports:
      - "8033:8033"
    env_file:
      - .env
    environment:
      - ENVIRONMENT=development
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      # Frontend specific settings
      - FRONTEND_HOST=0.0.0.0
      - FRONTEND_PORT=8033
      # Backend connection for containers
      - BACKEND_HOST=app
      - BACKEND_PORT=8022
      # UI settings
      - FRONTEND_TITLE=A101 HR Profile Generator
      - PRIMARY_COLOR=blue
      - THEME=auto
    volumes:
      # Development mode - mount source code for hot reload
      - ./frontend:/app/frontend
      # Static files and logs с доступом с хоста
      - ./logs:/app/logs
      - ./frontend_static:/app/frontend/static
    depends_on:
      app:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - a101hr_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8033/_nicegui/status || exit 0"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Vue.js Frontend (Modern SPA)
  frontend-vue:
    build:
      context: ./frontend-vue
      dockerfile: Dockerfile
      target: ${FRONTEND_MODE:-development}
    container_name: a101hr_frontend_vue
    ports:
      - "5173:5173"  # Development mode (Vite)
      - "8080:80"    # Production mode (Nginx)
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_BACKEND_URL=http://host.docker.internal:8022
      - VITE_APP_TITLE=A101 HR Profile Generator
      - VITE_APP_VERSION=1.0.0
      - VITE_ENABLE_DEBUG=true
    extra_hosts:
      # Enable host.docker.internal on Linux
      - "host.docker.internal:host-gateway"
    volumes:
      # Development mode - mount source code for hot reload
      - ./frontend-vue/src:/app/src:ro
      - ./frontend-vue/public:/app/public:ro
      - ./frontend-vue/index.html:/app/index.html:ro
      - ./frontend-vue/vite.config.ts:/app/vite.config.ts:ro
      - ./frontend-vue/tsconfig.json:/app/tsconfig.json:ro
      - ./frontend-vue/tsconfig.app.json:/app/tsconfig.app.json:ro
      - ./frontend-vue/tsconfig.node.json:/app/tsconfig.node.json:ro
      # Prevent node_modules from being overwritten
      - /app/node_modules
    depends_on:
      app:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - a101hr_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5173/", "||", "exit", "0"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

networks:
  a101hr_network:
    driver: bridge

volumes:
  # Volume для frontend static
  frontend_static:
    driver: local
    name: a101hr_frontend_static
