#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:
- Transparent migration –æ—Ç —Å—Ç–∞—Ä–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ (bcrypt) –∫ –Ω–æ–≤–æ–º—É (SHA256+bcrypt)
- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å –æ–±–æ–∏–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏ –ø–∞—Ä–æ–ª–µ–π
"""

import sys
import requests
import json

API_BASE_URL = "http://localhost:8022"

def test_authentication():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –º–∏–≥—Ä–∞—Ü–∏–µ–π –ø–∞—Ä–æ–ª–µ–π"""

    print("üß™ –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ HTTP 401\n")
    print("=" * 60)

    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API...")
    try:
        response = requests.get(f"{API_BASE_URL}/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"‚ùå API –≤–µ—Ä–Ω—É–ª –∫–æ–¥ {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")
        return False

    # –¢–µ—Å—Ç 2: –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –∫—Ä–µ–¥–µ–Ω—à–µ–ª–∞–º–∏
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (admin/admin123)...")
    try:
        auth_data = {
            "username": "admin",
            "password": "admin123"
        }

        response = requests.post(
            f"{API_BASE_URL}/api/auth/login",
            json=auth_data,
            timeout=10
        )

        print(f"Response status: {response.status_code}")

        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞ (BaseResponse format)
            if result.get("success") and result.get("access_token"):
                # Verify BaseResponse fields
                if "timestamp" not in result:
                    print("‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ 'timestamp' –≤ BaseResponse")

                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω JWT —Ç–æ–∫–µ–Ω: {result['access_token'][:50]}...")
                print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {result['user_info']['username']}")
                print(f"‚úÖ –ü–æ–ª–Ω–æ–µ –∏–º—è: {result['user_info']['full_name']}")
                print(f"‚úÖ Token type: {result['token_type']}")
                print(f"‚úÖ Expires in: {result['expires_in']} —Å–µ–∫—É–Ω–¥")
                print(f"‚úÖ Timestamp: {result.get('timestamp', 'N/A')}")

                return True
            else:
                print(f"‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞: {result}")
                return False

        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: HTTP {response.status_code}")
            try:
                error_data = response.json()
                print(f"–û—à–∏–±–∫–∞: {json.dumps(error_data, indent=2, ensure_ascii=False)}")
            except:
                print(f"Response text: {response.text}")
            return False

    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
        return False

    # –¢–µ—Å—Ç 3: –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è (–¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —É–∂–µ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º)
    print("\n3Ô∏è‚É£ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è (–ø—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è)...")
    try:
        response = requests.post(
            f"{API_BASE_URL}/api/auth/login",
            json=auth_data,
            timeout=10
        )

        if response.status_code == 200:
            print("‚úÖ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            print("‚úÖ –ü–∞—Ä–æ–ª—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏")
            return True
        else:
            print(f"‚ùå –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å: HTTP {response.status_code}")
            return False

    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
        return False


if __name__ == "__main__":
    print("\n" + "="*60)
    print("  –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø BUG: HTTP 401 Authentication Error")
    print("="*60 + "\n")

    success = test_authentication()

    print("\n" + "="*60)
    if success:
        print("  ‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("\n  –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:")
        print("  - Transparent password migration —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞")
        print("  - –°—Ç–∞—Ä—ã–µ –ø–∞—Ä–æ–ª–∏ (bcrypt) –º–∏–≥—Ä–∏—Ä—É—é—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        print("  - –ù–æ–≤—ã–µ –ø–∞—Ä–æ–ª–∏ (SHA256+bcrypt) —Ä–∞–±–æ—Ç–∞—é—Ç —Å—Ä–∞–∑—É")
    else:
        print("  ‚ùå –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´!")
    print("="*60 + "\n")

    sys.exit(0 if success else 1)
